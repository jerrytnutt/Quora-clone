{"version":3,"sources":["services/firebase.js","context/dataContext.js","components/menubutton.js","components/loginBox.js","components/questionbox.js","components/header.js","components/comments.js","components/questions.js","components/main.js","components/profilepage.js","App.js","reportWebVitals.js","index.js"],"names":["require","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","DataContext","createContext","DataProvider","children","useState","loggedIn","setloggedIn","askedQuestion","setaskedQuestion","currentUser","setcurrentUser","questionsArray","setquestionsArray","firstLetter","setfirstLetter","occupation","setoccupation","username","setusername","password","setpassword","Provider","value","Openmenu","React","open","setOpen","anchorRef","useContext","handleProfile","event","current","contains","target","handleClose","handleListKeyDown","key","preventDefault","prevOpen","focus","signOut","then","console","log","error","Button","ref","id","undefined","onClick","fontSize","Popper","anchorEl","role","placement","transition","disablePortal","TransitionProps","Grow","style","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","to","textDecoration","color","MenuItem","Login","handleSubmit","className","Toolbar","Grid","container","justifyContent","wrap","item","Typography","variant","spacing","direction","elevation","component","onSubmit","TextField","type","placeholder","fullWidth","name","onChange","required","autoFocus","email","signInWithEmailAndPassword","substring","catch","createUserWithEmailAndPassword","code","alert","message","onAuthStateChanged","user","createNewAccount","userCredential","signInExistingAccount","demoEmail","randomChars","result","i","charAt","Math","floor","random","length","QuestionBox","submitQuestion","a","substr","indexOf","con","uid","currentQuestion","collection","doc","get","randInt","set","description","question","comments","voteList","downvotes","upvotes","Header","useEffect","AppBar","position","IconButton","InputBase","Comments","questionContent","padding","Avatar","alt","margin","textAlign","comment","Divider","Questions","baseSize","setbaseSize","commentSize","setcommentSize","userComment","setuserComment","Uvotes","setUvotes","setdownvotes","questionArray","createdAnswer","setcreatedAnswer","questionInformation","addUpvotes","voteType","userId","data","newList","push","update","upVotes","newVotes","answerQuestion","answer","Container","alignItems","display","flexDirection","Box","sx","backgroundColor","grey","toUpperCase","multiline","rows","defaultValue","newCommentObject","newArray","map","index","Main","tempArray","currentArray","forEach","infoArray","fetchData","ProfilePage","App","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd38a76b.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nrequire(\"firebase/auth\");\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC7xU6nUNUuEYDX6-jhMdzM7_w5ySFRCKk\",\r\n  authDomain: \"quora-clone-cf804.firebaseapp.com\",\r\n  projectId: \"quora-clone-cf804\",\r\n  storageBucket: \"quora-clone-cf804.appspot.com\",\r\n  messagingSenderId: \"398270854351\",\r\n  appId: \"1:398270854351:web:767c9df001110e9aa233ba\",\r\n  measurementId: \"G-NSY9TNFPZ6\",\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst auth = firebase.auth();\r\nconst db = firebase.firestore();\r\nexport { db };\r\n\r\nexport default auth;\r\n","import { createContext, useState } from \"react\";\r\n\r\nconst DataContext = createContext({});\r\n\r\nexport const DataProvider = ({ children }) => {\r\n  const [loggedIn, setloggedIn] = useState(false);\r\n  const [askedQuestion, setaskedQuestion] = useState(\"\");\r\n  const [currentUser, setcurrentUser] = useState(false);\r\n  const [questionsArray, setquestionsArray] = useState([]);\r\n  const [firstLetter, setfirstLetter] = useState(\"\");\r\n  const [occupation, setoccupation] = useState(\"\");\r\n\r\n  const [username, setusername] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n\r\n  return (\r\n    <DataContext.Provider\r\n      value={{\r\n        loggedIn,\r\n        setloggedIn,\r\n        username,\r\n        setusername,\r\n        password,\r\n        setpassword,\r\n        currentUser,\r\n        setcurrentUser,\r\n        questionsArray,\r\n        setquestionsArray,\r\n        firstLetter,\r\n        setfirstLetter,\r\n        askedQuestion,\r\n        setaskedQuestion,\r\n        occupation,\r\n        setoccupation,\r\n      }}\r\n    >\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DataContext;\r\n","import * as React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport auth from \"../services/firebase\";\r\nimport { useContext } from \"react\";\r\n\r\nimport DataContext from \"../context/dataContext\";\r\n\r\nexport default function Openmenu() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n\r\n  const { loggedIn, setloggedIn } = useContext(DataContext);\r\n  const { currentUser, setcurrentUser } = useContext(DataContext);\r\n\r\n  const handleToggle = () => {\r\n    console.log(`currentUser ${currentUser}`);\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleProfile = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n  };\r\n  const handleClose = (event) => {\r\n    //make sign in a state\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n    if (!loggedIn) {\r\n      setloggedIn(true);\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  function handleListKeyDown(event) {\r\n    if (event.key === \"Tab\") {\r\n      event.preventDefault();\r\n      setOpen(false);\r\n    } else if (event.key === \"Escape\") {\r\n      setOpen(false);\r\n    }\r\n  }\r\n\r\n  const prevOpen = React.useRef(open);\r\n  React.useEffect(() => {\r\n    if (prevOpen.current === true && open === false) {\r\n      anchorRef.current.focus();\r\n    }\r\n\r\n    prevOpen.current = open;\r\n  }, [open]);\r\n  const signOut = () => {\r\n    auth.signOut().then(\r\n      function () {\r\n        console.log(\"Signed Out\");\r\n        return setcurrentUser(false);\r\n      },\r\n      function (error) {\r\n        console.error(\"Sign Out Error\", error);\r\n      }\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Button\r\n          ref={anchorRef}\r\n          id=\"composition-button\"\r\n          aria-controls={open ? \"composition-menu\" : undefined}\r\n          aria-expanded={open ? \"true\" : undefined}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleToggle}\r\n        >\r\n          <AccountCircle fontSize=\"large\" />\r\n        </Button>\r\n        <Popper\r\n          open={open}\r\n          anchorEl={anchorRef.current}\r\n          role={undefined}\r\n          placement=\"bottom-start\"\r\n          transition\r\n          disablePortal\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom-start\" ? \"left top\" : \"left bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleClose}>\r\n                  <MenuList\r\n                    autoFocusItem={open}\r\n                    id=\"composition-menu\"\r\n                    aria-labelledby=\"composition-button\"\r\n                    onKeyDown={handleListKeyDown}\r\n                  >\r\n                    {currentUser ? (\r\n                      <Link\r\n                        to=\"/profile-page\"\r\n                        style={{ textDecoration: \"none\", color: \"black\" }}\r\n                      >\r\n                        <MenuItem onClick={handleProfile}>Profile</MenuItem>\r\n                      </Link>\r\n                    ) : (\r\n                      <MenuItem onClick={handleClose}>Create Profile</MenuItem>\r\n                    )}\r\n                    {currentUser ? (\r\n                      <MenuItem onClick={signOut}>Sign Out</MenuItem>\r\n                    ) : (\r\n                      <MenuItem onClick={handleClose}>Sign In</MenuItem>\r\n                    )}\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Popper>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"../style/login.css\";\r\nimport React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport auth from \"../services/firebase\";\r\n\r\nimport DataContext from \"../context/dataContext\";\r\n\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\n\r\nconst Login = () => {\r\n  const { password, setpassword } = useContext(DataContext);\r\n  const { username, setusername } = useContext(DataContext);\r\n  const { occupation, setoccupation } = useContext(DataContext);\r\n  const { setfirstLetter } = useContext(DataContext);\r\n  const { setloggedIn } = useContext(DataContext);\r\n  const { setcurrentUser } = useContext(DataContext);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setpassword(\"\");\r\n    setusername(\"\");\r\n    setoccupation(\"\");\r\n  };\r\n\r\n  const createNewAccount = (email, password) => {\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        setfirstLetter(email.substring(0, 1));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n\r\n        auth\r\n          .createUserWithEmailAndPassword(email, password)\r\n          .then(() => {\r\n            setfirstLetter(email.substring(0, 1));\r\n          })\r\n          .catch((error) => {\r\n            switch (error.code) {\r\n              case \"auth/email-already-in-use\":\r\n                alert(`Email address already in use.`);\r\n                break;\r\n              case \"auth/invalid-email\":\r\n                alert(`Email address  is invalid.`);\r\n                break;\r\n              case \"auth/operation-not-allowed\":\r\n                alert(`Error during sign up.`);\r\n                break;\r\n              case \"auth/weak-password\":\r\n                alert(\r\n                  \"Password is not strong enough. Add additional characters including special characters and numbers.\"\r\n                );\r\n                break;\r\n              default:\r\n                alert(error.message);\r\n                break;\r\n            }\r\n          });\r\n        const unSub = auth.onAuthStateChanged((user) => {\r\n          setloggedIn(false);\r\n          setcurrentUser(user);\r\n          setoccupation(occupation);\r\n        });\r\n        return unSub;\r\n      });\r\n    const unSub = auth.onAuthStateChanged((user) => {\r\n      setloggedIn(false);\r\n      setcurrentUser(user);\r\n      setoccupation(occupation);\r\n    });\r\n    return unSub;\r\n  };\r\n\r\n  const signInExistingAccount = (email, password) => {\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((userCredential) => {\r\n        setfirstLetter(email.substring(0, 1));\r\n      })\r\n      .catch((error) => {\r\n        alert(error.message);\r\n      });\r\n    const unSub = auth.onAuthStateChanged((user) => {\r\n      setcurrentUser(user);\r\n      setloggedIn(false);\r\n    });\r\n    return unSub;\r\n  };\r\n\r\n  const createDemoAccount = () => {\r\n    let demoEmail;\r\n    let demoPassword;\r\n\r\n    let randomChars =\r\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n    let result = \"\";\r\n    for (var i = 0; i < 10; i++) {\r\n      result += randomChars.charAt(\r\n        Math.floor(Math.random() * randomChars.length)\r\n      );\r\n    }\r\n    demoEmail = `${result}@website.com`;\r\n    demoPassword = \"password12345\";\r\n\r\n    auth\r\n      .createUserWithEmailAndPassword(demoEmail, demoPassword)\r\n      .then(() => {\r\n        setfirstLetter(demoEmail.substring(0, 1));\r\n      })\r\n      .catch((error) => {});\r\n    const unSub = auth.onAuthStateChanged((user) => {\r\n      setloggedIn(false);\r\n      setoccupation(\"Demo Account\");\r\n      setcurrentUser(user);\r\n    });\r\n    return unSub;\r\n  };\r\n  return (\r\n    <div className=\"logInBox\">\r\n      <Toolbar>\r\n        <Grid container justifyContent=\"center\" wrap=\"wrap\">\r\n          <Grid item>\r\n            <Typography variant=\"h6\"></Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n\r\n      <Grid container spacing={0} justifyContent=\"center\" direction=\"row\">\r\n        <Grid item>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            justifyContent=\"center\"\r\n            spacing={2}\r\n            className=\"login-form\"\r\n          >\r\n            <Paper\r\n              variant=\"elevation\"\r\n              elevation={2}\r\n              className=\"login-background\"\r\n            >\r\n              <Grid item>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                  Create an account\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <form onSubmit={handleSubmit}>\r\n                  <Grid container direction=\"column\" spacing={2}>\r\n                    <Grid item>\r\n                      <TextField\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        fullWidth\r\n                        name=\"username\"\r\n                        variant=\"outlined\"\r\n                        onChange={(event) => setusername(event.target.value)}\r\n                        required\r\n                        autoFocus\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <TextField\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        variant=\"outlined\"\r\n                        onChange={(event) => setpassword(event.target.value)}\r\n                        required\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <TextField\r\n                        type=\"text\"\r\n                        placeholder=\"Occupation/Education\"\r\n                        fullWidth\r\n                        name=\"username\"\r\n                        variant=\"outlined\"\r\n                        onChange={(event) => setoccupation(event.target.value)}\r\n                        required\r\n                        autoFocus\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        className=\"button-block\"\r\n                        onClick={() => {\r\n                          createNewAccount(username, password);\r\n                        }}\r\n                      >\r\n                        Create\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </form>\r\n              </Grid>\r\n              <Grid item>\r\n                <div className=\"bar\"></div>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                  Sign in\r\n                </Typography>\r\n                <Grid item>\r\n                  <form onSubmit={handleSubmit}>\r\n                    <Grid container direction=\"column\" spacing={2}>\r\n                      <Grid item>\r\n                        <TextField\r\n                          type=\"email\"\r\n                          placeholder=\"Email\"\r\n                          fullWidth\r\n                          name=\"username\"\r\n                          variant=\"outlined\"\r\n                          onChange={(event) => setusername(event.target.value)}\r\n                          required\r\n                          autoFocus\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <TextField\r\n                          type=\"password\"\r\n                          placeholder=\"Password\"\r\n                          fullWidth\r\n                          name=\"password\"\r\n                          variant=\"outlined\"\r\n                          onChange={(event) => setpassword(event.target.value)}\r\n                          required\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          type=\"submit\"\r\n                          className=\"button-block\"\r\n                          onClick={() => {\r\n                            signInExistingAccount(username, password);\r\n                          }}\r\n                        >\r\n                          Sign In\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </form>\r\n                </Grid>\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"orange\"\r\n                  type=\"submit\"\r\n                  className=\"button-block\"\r\n                  onClick={createDemoAccount}\r\n                >\r\n                  Use Demo Account\r\n                </Button>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n","import \"../style/login.css\";\r\nimport React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { db } from \"../services/firebase\";\r\n\r\nimport DataContext from \"../context/dataContext\";\r\n//<form onSubmit={handleSubmit}>\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Toolbar,\r\n} from \"@material-ui/core\";\r\n\r\nconst QuestionBox = () => {\r\n  const { askedQuestion, setaskedQuestion } = useContext(DataContext);\r\n  const { occupation } = useContext(DataContext);\r\n\r\n  const { currentUser } = useContext(DataContext);\r\n\r\n  console.log(askedQuestion);\r\n\r\n  const submitQuestion = async () => {\r\n    const name = currentUser.email.substr(0, currentUser.email.indexOf(\"@\"));\r\n    let con = currentUser.uid;\r\n    const currentQuestion = db.collection(\"questions\").doc(con);\r\n    let doc = await currentQuestion.get();\r\n    console.log(doc);\r\n    let newNum = 0;\r\n    if (doc) {\r\n      let randInt = Math.floor(Math.random() * 100);\r\n\r\n      con = con + randInt;\r\n    }\r\n\r\n    setaskedQuestion(false);\r\n    return db.collection(\"questions\").doc(con).set({\r\n      name: name,\r\n      description: occupation,\r\n      question: askedQuestion,\r\n\r\n      comments: [],\r\n      voteList: [],\r\n      downvotes: 0,\r\n      upvotes: 0,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"logInBox\">\r\n      <Toolbar>\r\n        <Grid container justifyContent=\"center\" wrap=\"wrap\">\r\n          <Grid item>\r\n            <Typography variant=\"h6\"></Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n      <Grid container spacing={0} justifyContent=\"center\" direction=\"row\">\r\n        <Grid item>\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n            justifyContent=\"center\"\r\n            spacing={2}\r\n            className=\"login-form\"\r\n          >\r\n            <Paper\r\n              variant=\"elevation\"\r\n              elevation={2}\r\n              className=\"login-background\"\r\n            >\r\n              <Grid item>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                  Enter Question\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <Grid container direction=\"column\" spacing={2}>\r\n                  <Grid item>\r\n                    <TextField\r\n                      fullWidth\r\n                      name=\"askedQuestion\"\r\n                      variant=\"outlined\"\r\n                      onChange={(event) => setaskedQuestion(event.target.value)}\r\n                      required\r\n                      autoFocus\r\n                    />\r\n                  </Grid>\r\n                  <Grid item></Grid>\r\n                  <Grid item>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      className=\"button-block\"\r\n                      onClick={submitQuestion}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\nexport default QuestionBox;\r\n","import \"../style/header.css\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport NotificationIcon from \"@material-ui/icons/Notifications\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport Openmenu from \"./menubutton\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport Login from \"./loginBox\";\r\nimport QuestionBox from \"./questionbox\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport auth from \"../services/firebase\";\r\nimport { Link } from \"react-router-dom\";\r\n//<div>Icons made by <a href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\r\nimport DataContext from \"../context/dataContext\";\r\n\r\nconst Header = () => {\r\n  const { loggedIn } = useContext(DataContext);\r\n  const { askedQuestion, setaskedQuestion } = useContext(DataContext);\r\n  const { currentUser, setcurrentUser } = useContext(DataContext);\r\n  const askQuestion = () => {\r\n    if (currentUser && !loggedIn) {\r\n      return setaskedQuestion(true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        setcurrentUser(user);\r\n      } else {\r\n        console.log(\"No current User\");\r\n      }\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      {loggedIn ? <Login /> : \"\"}\r\n      {askedQuestion ? <QuestionBox /> : \"\"}\r\n\r\n      <AppBar position=\"static\">\r\n        <Toolbar className=\"appBar\">\r\n          <p variant=\"title\">Quora</p>\r\n\r\n          <Link to=\"/\">\r\n            <IconButton className=\"toggle\" aria-label=\"Menu\">\r\n              <HomeIcon fontSize=\"large\" />\r\n            </IconButton>\r\n          </Link>\r\n          <IconButton className=\"toggle\" aria-label=\"Menu\">\r\n            <NotificationIcon fontSize=\"large\" />\r\n          </IconButton>\r\n          <SearchIcon className=\"searchIcon\" />\r\n          <InputBase\r\n            placeholder=\"Search Quora\"\r\n            className=\"inputBase\"\r\n            fontSize=\"large\"\r\n          />\r\n\r\n          <div>\r\n            <div className=\"buttonHolder\">\r\n              <Openmenu />\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                className=\"button-block\"\r\n                onClick={askQuestion}\r\n              >\r\n                Ask a Question\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\nexport default Header;\r\n","import { Divider, Avatar, Grid, Paper } from \"@material-ui/core\";\r\n\r\nconst Comments = ({ item }) => {\r\n  const questionContent = item;\r\n  return (\r\n    <div style={{ padding: 14 }} className=\"App\">\r\n      <h1>Comments</h1>\r\n      <Paper style={{ padding: \"40px 20px\" }}>\r\n        <Grid>\r\n          <Grid item>\r\n            <Avatar alt=\"Remy Sharp\" />\r\n          </Grid>\r\n          <Grid>\r\n            <h4 style={{ margin: 0, textAlign: \"left\" }}>\r\n              {questionContent.name}\r\n            </h4>\r\n            <p style={{ textAlign: \"left\" }}>{questionContent.comment} </p>\r\n            <p style={{ textAlign: \"left\", color: \"gray\" }}>\r\n              posted 1 minute ago\r\n            </p>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider variant=\"fullWidth\" style={{ margin: \"30px 0\" }} />\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\nexport default Comments;\r\n","import \"../style/questions.css\";\r\nimport Comments from \"./comments\";\r\nimport { db } from \"../services/firebase\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport { useState, useContext } from \"react\";\r\n\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nimport DataContext from \"../context/dataContext\";\r\n\r\nconst Questions = ({ item }) => {\r\n  //console.log(item[1].comments);\r\n  const [baseSize, setbaseSize] = useState(\"commentBase\");\r\n  const [commentSize, setcommentSize] = useState(\"endBox\");\r\n  const [userComment, setuserComment] = useState(\"\");\r\n  const [Uvotes, setUvotes] = useState(item[1].upvotes);\r\n  const [downvotes, setdownvotes] = useState(item[1].downvotes);\r\n  const [questionArray] = useState(item[1].comments);\r\n  const [createdAnswer, setcreatedAnswer] = useState(\"\");\r\n\r\n  const { currentUser } = useContext(DataContext);\r\n  //const { firstLetter } = useContext(DataContext);\r\n\r\n  const questionInformation = item[1];\r\n  //console.log(questionArray);\r\n  const changeBox = () => {\r\n    console.log(6);\r\n    return setcommentSize(\"box\");\r\n  };\r\n  const say = () => {\r\n    console.log(baseSize);\r\n    return setbaseSize(\"commentBaseBigger\");\r\n  };\r\n\r\n  const addAComment = () => {\r\n    console.log(currentUser.email);\r\n    const newCommentObject = { name: currentUser.email, comment: userComment };\r\n    const newArray = item[1].comments;\r\n    newArray.push(newCommentObject);\r\n    const currentQuestion = db.collection(\"questions\").doc(item[0]);\r\n    currentQuestion.update({ comments: newArray });\r\n  };\r\n\r\n  const addUpvotes = async (voteType) => {\r\n    if (!currentUser) {\r\n      return alert(\"Please create an account to vote\");\r\n    }\r\n    const userId = currentUser.uid;\r\n    const currentQuestion = await db.collection(\"questions\").doc(item[0]);\r\n    const doc = await currentQuestion.get();\r\n\r\n    let voteList = doc.data().voteList;\r\n    for (var i = 0; i < voteList.length; i++) {\r\n      if (voteList[i] === userId) {\r\n        return null;\r\n      }\r\n    }\r\n    let newList = voteList;\r\n    newList.push(userId);\r\n    currentQuestion.update({ voteList: newList });\r\n    if (voteType === \"up\") {\r\n      let upVotes = doc.data().upvotes;\r\n      let newVotes = (upVotes += 1);\r\n      currentQuestion.update({ upvotes: newVotes });\r\n      return setUvotes(newVotes);\r\n    }\r\n    let downvotes = doc.data().downvotes;\r\n    let newVotes = (downvotes += 1);\r\n    currentQuestion.update({ downvotes: newVotes });\r\n    setdownvotes(newVotes);\r\n  };\r\n  const answerQuestion = async () => {\r\n    console.log(item[0]);\r\n\r\n    const currentQuestion = db.collection(\"questions\").doc(item[0]);\r\n    const doc = await currentQuestion.get();\r\n    return db.collection(\"questions\").doc(item[0]).update({\r\n      answer: createdAnswer,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Container\r\n        style={{\r\n          alignItems: \"center\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n        }}\r\n        className=\"container\"\r\n      >\r\n        <Box\r\n          sx={{\r\n            backgroundColor: grey,\r\n          }}\r\n          className=\"box\"\r\n        >\r\n          <div className=\"name\">\r\n            <div className=\"userImage\">\r\n              <p>{questionInformation.name.substring(0, 1).toUpperCase()}</p>\r\n            </div>\r\n            <div className=\"userInfo\">\r\n              <p className=\"userName\">{questionInformation.name}</p>\r\n              <p className=\"userTitle\">{questionInformation.description}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"question\">{questionInformation.question}</div>\r\n          <div className=\"bar\"></div>\r\n          <div className=\"answer\">\r\n            {questionInformation.answer ? (\r\n              questionInformation.answer\r\n            ) : (\r\n              <div>\r\n                <TextField\r\n                  name={createdAnswer}\r\n                  onChange={(event) => setcreatedAnswer(event.target.value)}\r\n                  id=\"standard-multiline-static\"\r\n                  multiline\r\n                  rows={4}\r\n                  defaultValue=\"Answer...\"\r\n                  variant=\"standard\"\r\n                />\r\n                <button className=\"addAnswer\" onClick={answerQuestion}>\r\n                  Answer Question\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"replies\">\r\n            <div className=\"arrows\">\r\n              <div className=\"arrowBox\">\r\n                <ArrowUpwardIcon\r\n                  onClick={() => {\r\n                    addUpvotes(\"up\");\r\n                  }}\r\n                />\r\n                {Uvotes}\r\n              </div>\r\n              <div className=\"arrowBox\">\r\n                <ArrowDownwardIcon onClick={addUpvotes} />\r\n                {downvotes}\r\n              </div>\r\n            </div>\r\n            <CommentIcon onClick={changeBox} />\r\n          </div>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            backgroundColor: grey,\r\n          }}\r\n          className={commentSize}\r\n        >\r\n          <div className=\"addComment\">\r\n            <div className=\"userImage\"></div>\r\n            <InputBase\r\n              placeholder=\"Add a Comment...\"\r\n              className={baseSize}\r\n              fontSize=\"large\"\r\n              onChange={(event) => setuserComment(event.target.value)}\r\n              onClick={say}\r\n            />\r\n            <button onClick={addAComment} className=\"commentButton\">\r\n              Add Comment\r\n            </button>\r\n          </div>\r\n          {questionArray ? (\r\n            questionArray.map((item, index) => (\r\n              <Comments key={index} item={item} />\r\n            ))\r\n          ) : (\r\n            <p>Users is empty</p>\r\n          )}\r\n        </Box>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\nexport default Questions;\r\n","import \"../style/main.css\";\r\n\r\nimport { useEffect, useContext } from \"react\";\r\nimport { db } from \"../services/firebase\";\r\nimport DataContext from \"../context/dataContext\";\r\nimport Questions from \"./questions\";\r\n\r\nconst Main = () => {\r\n  const { questionsArray, setquestionsArray } = useContext(DataContext);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        let tempArray = [];\r\n        let currentArray = db.collection(\"questions\");\r\n        currentArray = await currentArray.get();\r\n        currentArray.forEach((doc) => {\r\n          let infoArray = [doc.id, doc.data()];\r\n          tempArray.push(infoArray);\r\n        });\r\n        return setquestionsArray(tempArray);\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, [questionsArray, setquestionsArray]);\r\n  return (\r\n    <div className=\"main\">\r\n      {questionsArray.map((item, index) => (\r\n        <Questions key={index} item={item} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default Main;\r\n","import \"../style/main.css\";\r\n\r\nconst ProfilePage = () => {\r\n  return <div>hey</div>;\r\n};\r\nexport default ProfilePage;\r\n","import \"./App.css\";\n\nimport Header from \"./components/header\";\nimport Main from \"./components/main\";\nimport ProfilePage from \"./components/profilepage\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport { DataProvider } from \"./context/dataContext.js\";\n\nfunction App() {\n  //Context API\n  //https://www.youtube.com/watch?v=ngVvDegsAW8\n  //https://www.youtube.com/watch?v=ZBZ6BqoUDsU\n\n  //100 everything small and efficient\n  //CSS file for each component instead of one big CSS file.\n\n  //https://www.youtube.com/watch?v=vyJU9efvUtQ\n  return (\n    <Router>\n      <div className=\"App\">\n        <DataProvider>\n          <Header />\n          <Routes>\n            <Route exact path=\"/\" element={<Main />}></Route>\n            <Route exact path=\"/profile-page\" element={<ProfilePage />}></Route>\n          </Routes>\n        </DataProvider>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}